{"version":3,"sources":["containers/Contexts/ModalContext.js","exportFunctions/createField/createField.js","containers/Contexts/FormContext.js","containers/Contexts/NotesContext.js","containers/FormFieldWrapper/FormFieldWrapper.js","components/UiItems/Input/Input.js","components/UiItems/Button/Button.js","components/SearchPanel/SearchPanel.js","components/CreateNotesButton/CreateNotesButton.js","components/NotesList/NotesCard/NotesCard.js","components/NotesList/NotesList.js","containers/Layout/Layout.js","components/UiItems/Textarea/Textarea.js","components/Modal/Modal.js","exportFunctions/validation/validation.js","App.js","reportWebVitals.js","index.js"],"names":["ModalContext","React","createContext","useModal","useContext","ModalProvider","children","useState","modal","setModal","modalType","setModalType","Provider","value","changeModal","createNewFormFields","placeholder","type","autoComplete","formFields","title","color","description","FormContext","useForm","FormProvider","form","setForm","isFormValid","setFormValid","notesFields","setNotesFields","clearForm","notesInitialState","id","NotesContext","useNotes","NotesProvider","notes","setNotes","filterNotes","setFilterNotes","notesTextInput","setNotesTextInput","checkNotesData","length","funcToSetState","func","isFuncExist","FormFieldWrapper","props","className","Input","disabled","join","onChange","Button","onClick","undefined","SearchPanel","filteredData","setFilteredData","action","method","event","preventDefault","trim","searchHandler","icon","faSearch","eValue","target","toLowerCase","excludeFields","filteredNotes","filter","note","Object","keys","some","field","includes","onChangeInputHandler","CreateNotesButton","scaleButton","setScaleButton","NotesCard","TransitionGroup","component","map","index","CSSTransition","mountOnEnter","unmountOnExit","timeout","enter","exit","classNames","style","backgroundColor","editNotesCard","removeNotesCard","NotesCards","noteId","stopPropagation","confirm","window","storage","formField","Layout","Textarea","defaultErrorMessage","Modal","errorMessage","setErrorMessage","resetAll","onChangeFieldsHandler","fieldName","titleMaxValue","name","validateFields","valid","prevState","onSubmit","FormField","newNotes","Math","random","toString","splice","findIndex","v","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49c4f5c5.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\r\n\r\nconst ModalContext = React.createContext();\r\n\r\nexport const useModal = () => useContext(ModalContext);\r\n\r\nexport const ModalProvider = ({ children }) => {\r\n  const [modal, setModal] = useState(false);\r\n  const [modalType, setModalType] = useState(\"create\");\r\n\r\n  const changeModal = () => setModal(!modal);\r\n\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{ modal, changeModal, modalType, setModalType }}\r\n    >\r\n      {children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n","const colorInputDefaultValue = \"#e9e4eb\";\r\n\r\nexport function createNewFormFields(placeholder, type = \"text\", value = \"\") {\r\n  return { autoComplete: \"off\", placeholder, type, value };\r\n}\r\n\r\nexport function formFields() {\r\n  return {\r\n    title: createNewFormFields(\"Введите заголовок\"),\r\n    color: createNewFormFields(\"Цвет заметки\", \"color\", colorInputDefaultValue),\r\n    description: createNewFormFields(\"Текст заметки\"),\r\n  };\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { formFields } from \"../../exportFunctions/createField/createField\";\r\n\r\nconst FormContext = React.createContext();\r\n\r\nexport const useForm = () => useContext(FormContext);\r\n\r\nexport const FormProvider = ({ children }) => {\r\n  const [form, setForm] = useState(formFields());\r\n  const [isFormValid, setFormValid] = useState(false);\r\n\r\n  const clearForm = () => setForm(formFields());\r\n\r\n  return (\r\n    <FormContext.Provider\r\n      value={{\r\n        notesFields: form,\r\n        setNotesFields: setForm,\r\n        isFormValid,\r\n        setFormValid,\r\n        clearForm,\r\n      }}\r\n    >\r\n      {children}\r\n    </FormContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nconst notesInitialState = [\r\n  {\r\n    id: 1,\r\n    title: \"Первая заметка\",\r\n    description: \"Описание моей заметки\",\r\n    color: \"#dcadff\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Вторая заметка\",\r\n    description: \"******\\n######\\n******\\n######\\n******\\n######\\n******\",\r\n    color: \"#c1f5ff\",\r\n  },\r\n];\r\n\r\nconst NotesContext = React.createContext();\r\n\r\nexport const useNotes = () => useContext(NotesContext);\r\n\r\nexport const NotesProvider = ({ children }) => {\r\n  const [notes, setNotes] = useState(notesInitialState);\r\n  const [filterNotes, setFilterNotes] = useState(notes);\r\n  const [notesTextInput, setNotesTextInput] = useState(\"\");\r\n\r\n  const checkNotesData =\r\n    filterNotes.length !== 0 || filterNotes.length === 0 ? filterNotes : notes;\r\n\r\n  const funcToSetState = (func) => {\r\n    const isFuncExist = func ? func(notes) : notes;\r\n\r\n    if (setFilterNotes) {\r\n      setNotes(isFuncExist);\r\n      setFilterNotes(isFuncExist);\r\n      setNotesTextInput(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <NotesContext.Provider\r\n      value={{\r\n        notes,\r\n        setNotes,\r\n        filterNotes,\r\n        setFilterNotes,\r\n        notesTextInput,\r\n        setNotesTextInput,\r\n        checkNotesData,\r\n        funcToSetState,\r\n      }}\r\n    >\r\n      {children}\r\n    </NotesContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./FormFieldWrapper.scss\";\r\n\r\nconst FormFieldWrapper = (props) => (\r\n  <div className=\"form-items__wrapper\">{props.children}</div>\r\n);\r\n\r\nexport default FormFieldWrapper;\r\n","import React from \"react\";\r\nimport FormFieldWrapper from \"../../../containers/FormFieldWrapper/FormFieldWrapper\";\r\nimport \"./Input.scss\";\r\n\r\nconst Input = (props) => (\r\n  <FormFieldWrapper>\r\n    <input\r\n      type={props.type}\r\n      value={props.value}\r\n      placeholder={props.placeholder}\r\n      disabled={props.disabled}\r\n      autoComplete={props.autoComplete}\r\n      className={[props.className, \"form-field__input, input\"].join(\" \")}\r\n      onChange={props.onChange}\r\n    >\r\n      {props.children}\r\n    </input>\r\n  </FormFieldWrapper>\r\n);\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport \"./Button.scss\";\r\n\r\nconst Button = (props) => (\r\n  <button\r\n    onClick={props.onClick}\r\n    type={props.type}\r\n    className={[\r\n      props.className,\r\n      \"button\",\r\n      `${props.disabled !== undefined ? \"_disabled_\" + props.disabled : \"\"}`,\r\n    ].join(\" \")}\r\n    disabled={props.disabled}\r\n  >\r\n    {props.children}\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useNotes } from \"../../containers/Contexts/NotesContext\";\r\nimport Input from \"../UiItems/Input/Input\";\r\nimport Button from \"../UiItems/Button/Button\";\r\nimport \"./SearchPanel.scss\";\r\n\r\nconst SearchPanel = () => {\r\n  const {\r\n    notes,\r\n    filterNotes,\r\n    setNotes,\r\n    setFilterNotes,\r\n    setNotesTextInput,\r\n    notesTextInput,\r\n  } = useNotes();\r\n  const [filteredData, setFilteredData] = useState([]);\r\n\r\n  const searchHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (notesTextInput.trim() !== \"\") {\r\n      setFilterNotes(filteredData);\r\n      setNotes(notes);\r\n    } else setFilterNotes(notes);\r\n  };\r\n\r\n  const onChangeInputHandler = (event) => {\r\n    const eValue = event.target.value;\r\n    const value = eValue.toLowerCase().trim();\r\n    const excludeFields = [\"id\", \"color\"];\r\n    setNotesTextInput(eValue);\r\n\r\n    if (value !== \"\") {\r\n      const filteredNotes = notes.filter((note) => {\r\n        return Object.keys(note).some((field) =>\r\n          excludeFields.includes(field)\r\n            ? false\r\n            : note[field].toLowerCase().includes(value)\r\n        );\r\n      });\r\n      setFilteredData(filteredNotes);\r\n    } else setFilterNotes(notes);\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <hr className=\"header__hr-line hr-line\" />\r\n      <form action=\"\" method=\"get\" className=\"header__search-form search-form\">\r\n        <Button\r\n          type=\"submit\"\r\n          className=\"search-form__search-button\"\r\n          onClick={(event) => searchHandler(event)}\r\n        >\r\n          <FontAwesomeIcon icon={faSearch} className=\"search-form__icon-logo\" />\r\n        </Button>\r\n        <Input\r\n          type=\"search\"\r\n          placeholder=\"Поиск\"\r\n          autoComplete=\"off\"\r\n          value={notesTextInput}\r\n          className=\"search-form__input\"\r\n          onChange={(event) => onChangeInputHandler(event)}\r\n        />\r\n      </form>\r\n      {(filterNotes.length === 0 || filterNotes.length !== notes.length) &&\r\n      notes.length !== 0 ? (\r\n        <div className=\"header_notes-not-found\">\r\n          Очистите поле ввода, чтобы увидеть все Ваши заметки\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <hr className=\"header__hr-line hr-line\" />\r\n    </header>\r\n  );\r\n};\r\nexport default SearchPanel;\r\n","import React from \"react\";\r\nimport { useModal } from \"../../containers/Contexts/ModalContext\";\r\nimport Button from \"../UiItems/Button/Button\";\r\nimport \"./CreateNotesButton.scss\";\r\n\r\nconst CreateNotesButton = (props) => {\r\n  const { modal, changeModal, setModalType } = useModal();\r\n\r\n  const onClickHandler = () => {\r\n    setModalType(\"create\");\r\n    props.setScaleButton(false);\r\n    changeModal();\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      className={`create-notes-button${\r\n        modal && !props.scaleButton ? \"_modal_open\" : \"\"\r\n      }`}\r\n      onClick={onClickHandler}\r\n    >\r\n      +\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default CreateNotesButton;\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport Button from \"../../UiItems/Button/Button.js\";\r\nimport \"./NotesCard.scss\";\r\n\r\nconst NotesCard = (props) => (\r\n  <TransitionGroup className=\"notes-list__wrapper\" component={\"section\"}>\r\n    {props.notes.map((note, index) => (\r\n      <CSSTransition\r\n        key={note.id}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={{ enter: 500, exit: 300 }}\r\n        classNames=\"note\"\r\n      >\r\n        <article\r\n          key={index}\r\n          style={{\r\n            backgroundColor: note.color,\r\n          }}\r\n          className={`notes-list__notes-card notes-card`}\r\n          onClick={() => props.editNotesCard(note.id)}\r\n        >\r\n          <h2 className=\"notes-card__title\">{note.title}</h2>\r\n          <p className=\"notes-card__description\">{note.description}</p>\r\n          <Button\r\n            className=\"notes-card__trash-can\"\r\n            onClick={(event) => props.removeNotesCard(event, note.id)}\r\n          >\r\n            🗑\r\n          </Button>\r\n        </article>\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\nexport default NotesCard;\r\n","import React, { useState } from \"react\";\r\nimport { useNotes } from \"../../containers/Contexts/NotesContext\";\r\nimport { useModal } from \"../../containers/Contexts/ModalContext\";\r\nimport { useForm } from \"../../containers/Contexts/FormContext\";\r\nimport CreateNotesButton from \"../CreateNotesButton/CreateNotesButton\";\r\nimport NotesCard from \"./NotesCard/NotesCard\";\r\nimport \"./NotesList.scss\";\r\n\r\nconst NotesCards = () => {\r\n  const [scaleButton, setScaleButton] = useState(false);\r\n  const { notes, filterNotes, checkNotesData, funcToSetState } = useNotes();\r\n  const { changeModal, modalType, setModalType } = useModal();\r\n  const { notesFields, setNotesFields, setFormValid } = useForm();\r\n\r\n  const removeNotesCard = (event, noteId) => {\r\n    event.stopPropagation();\r\n    const confirm = window.confirm(\r\n      \"Вы действительно хотите удалить эту заметку?\"\r\n    );\r\n\r\n    funcToSetState((storage) =>\r\n      confirm ? storage.filter((note) => note.id !== noteId) : storage\r\n    );\r\n  };\r\n\r\n  const editNotesCard = (noteId) => {\r\n    changeModal();\r\n    setModalType(\"save\");\r\n    setScaleButton(true);\r\n\r\n    checkNotesData.map((note) => {\r\n      if (note.id === noteId) {\r\n        Object.keys(notesFields).map((formField) => {\r\n          notesFields[formField].noteId = note.id;\r\n          notesFields[formField].value = note[formField];\r\n          setFormValid(true);\r\n          return formField;\r\n        });\r\n      }\r\n      return notesFields;\r\n    });\r\n    setNotesFields(notesFields);\r\n  };\r\n\r\n  return (\r\n    <main className=\"notes-list\">\r\n      {checkNotesData.length ? (\r\n        <NotesCard\r\n          notes={checkNotesData}\r\n          modalType={modalType}\r\n          removeNotesCard={removeNotesCard}\r\n          editNotesCard={editNotesCard}\r\n        />\r\n      ) : (\r\n        <div className=\"notes-list__empty-notes\">\r\n          {filterNotes.length === 0 && notes.length !== 0\r\n            ? \"Ничего не найдено :(\"\r\n            : \"Создайте Вашу первую заметку!\"}\r\n        </div>\r\n      )}\r\n      <CreateNotesButton\r\n        scaleButton={scaleButton}\r\n        setScaleButton={setScaleButton}\r\n      />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default NotesCards;\r\n","import React from \"react\";\r\nimport \"./Layout.scss\";\r\n\r\nconst Layout = (props) => <div className=\"content\">{props.children}</div>;\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport FormFieldWrapper from \"../../../containers/FormFieldWrapper/FormFieldWrapper\";\r\nimport \"./Textarea.scss\";\r\n\r\nconst Textarea = (props) => (\r\n  <FormFieldWrapper>\r\n    <textarea\r\n      placeholder={props.placeholder}\r\n      value={props.value}\r\n      autoComplete={props.autoComplete}\r\n      disabled={props.disabled}\r\n      className={[props.className, \"textarea\"].join(\" \")}\r\n      onChange={props.onChange}\r\n    >\r\n      {props.children}\r\n    </textarea>\r\n  </FormFieldWrapper>\r\n);\r\n\r\nexport default Textarea;\r\n","import React, { useState } from \"react\";\r\nimport { validateFields } from \"../../exportFunctions/validation/validation\";\r\nimport { useModal } from \"../../containers/Contexts/ModalContext\";\r\nimport { useForm } from \"../../containers/Contexts/FormContext\";\r\nimport { useNotes } from \"../../containers/Contexts/NotesContext\";\r\nimport Input from \"../UiItems/Input/Input\";\r\nimport Textarea from \"../UiItems/Textarea/Textarea\";\r\nimport Button from \"../UiItems/Button/Button\";\r\nimport \"./Modal.scss\";\r\n\r\nconst defaultErrorMessage = \"Заполните хотя бы одно поле\";\r\n\r\nconst Modal = () => {\r\n  const {\r\n    notesFields,\r\n    setNotesFields,\r\n    isFormValid,\r\n    setFormValid,\r\n    clearForm,\r\n  } = useForm();\r\n  const { notes, funcToSetState } = useNotes();\r\n  const { modal, changeModal, modalType } = useModal();\r\n  const [errorMessage, setErrorMessage] = useState(defaultErrorMessage);\r\n\r\n  const createNotes = () => {\r\n    const newNotes = {\r\n      id: Math.random().toString(26),\r\n      title: notesFields.title.value,\r\n      description: notesFields.description.value,\r\n      color: notesFields.color.value,\r\n    };\r\n    funcToSetState((storage) => [{ ...newNotes }, ...storage]);\r\n  };\r\n\r\n  const editNote = () => {\r\n    notes.map((note) => {\r\n      Object.keys(notesFields).map((formField) => {\r\n        if (note.id === notesFields[formField].noteId) {\r\n          note[formField] = notesFields[formField].value;\r\n          notes.splice(\r\n            0,\r\n            0,\r\n            notes.splice(\r\n              notes.findIndex((v) => v.id === note.id),\r\n              1\r\n            )[0]\r\n          );\r\n        }\r\n        return notes;\r\n      });\r\n      return note;\r\n    });\r\n    funcToSetState();\r\n  };\r\n\r\n  const resetAll = () => {\r\n    setErrorMessage(\"Заполните хотя бы одно поле\");\r\n    setFormValid(false);\r\n    changeModal();\r\n    clearForm();\r\n  };\r\n\r\n  const submitNewNotes = (event) => {\r\n    event.preventDefault();\r\n    resetAll();\r\n  };\r\n\r\n  const onChangeFieldsHandler = (event, fieldName) => {\r\n    const field = notesFields[fieldName];\r\n    const titleMaxValue = notesFields[\"title\"].value.length < 30;\r\n\r\n    field.value = event.target.value;\r\n\r\n    if (!titleMaxValue) {\r\n      setErrorMessage(\"Длина заголовка не должна превышать 30 символов\");\r\n    } else setErrorMessage(defaultErrorMessage);\r\n\r\n    setFormValid(validateFields(notesFields) && titleMaxValue);\r\n    field.valid = isFormValid;\r\n\r\n    notesFields[fieldName] = field;\r\n    setNotesFields((prevState) => ({ ...prevState, ...notesFields }));\r\n  };\r\n\r\n  const renderFields = () => {\r\n    return Object.keys(notesFields).map((fieldName, index) => {\r\n      const field = notesFields[fieldName];\r\n      const FormField = fieldName === \"description\" ? Textarea : Input;\r\n      return (\r\n        <FormField\r\n          key={index}\r\n          type={field.type}\r\n          placeholder={field.placeholder}\r\n          value={field.value}\r\n          valid={field.valid}\r\n          className={`form-items__${fieldName} form-items__field form-items__fields${\r\n            !isFormValid && fieldName !== \"color\" ? \"_onError\" : \"\"\r\n          }`}\r\n          onChange={(event) => onChangeFieldsHandler(event, fieldName)}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`modal-window${modal ? \"_active\" : \"\"}`}\r\n        onClick={resetAll}\r\n      >\r\n        <form\r\n          className={`modal-window__notes-form notes-form notes-form${\r\n            modalType === \"create\" ? \"_create\" : \"_save\"\r\n          }`}\r\n          onSubmit={submitNewNotes}\r\n          onClick={(event) => event.stopPropagation()}\r\n        >\r\n          <div className=\"notes-form__form-items form-items\">\r\n            {renderFields()}\r\n          </div>\r\n          <div\r\n            className={`notes-form__buttons-section${\r\n              !isFormValid ? \"_onError\" : \"\"\r\n            } buttons-section`}\r\n          >\r\n            {!isFormValid ? (\r\n              <div className=\"notes-form__error-message error-message\">\r\n                *{errorMessage}\r\n              </div>\r\n            ) : null}\r\n            <div className=\"buttons-section__wrapper\">\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={!isFormValid}\r\n                className=\"buttons-section__create-button\"\r\n                onClick={modalType === \"create\" ? createNotes : editNote}\r\n              >\r\n                {modalType === \"create\" ? \"Создать\" : \"Сохранить\"}\r\n              </Button>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"buttons-section__close-button\"\r\n                onClick={resetAll}\r\n              >\r\n                Закрыть\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","export function validateFields(formFields) {\r\n  let isFormValid = true;\r\n\r\n  Object.keys(formFields).some(\r\n    (name) =>\r\n      (isFormValid =\r\n        formFields[name].type !== \"color\" &&\r\n        formFields[name].value.trim() !== \"\")\r\n  );\r\n\r\n  return isFormValid;\r\n}\r\n","import React from \"react\";\r\nimport { ModalProvider } from \"./containers/Contexts/ModalContext\";\r\nimport { FormProvider } from \"./containers/Contexts/FormContext\";\r\nimport { NotesProvider } from \"./containers/Contexts/NotesContext\";\r\nimport SearchPanel from \"./components/SearchPanel/SearchPanel\";\r\nimport NotesList from \"./components/NotesList/NotesList\";\r\nimport Layout from \"./containers/Layout/Layout\";\r\nimport Modal from \"./components/Modal/Modal\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Layout>\r\n      <ModalProvider>\r\n        <FormProvider>\r\n          <NotesProvider>\r\n            <SearchPanel />\r\n            <NotesList />\r\n            <Modal />\r\n          </NotesProvider>\r\n        </FormProvider>\r\n      </ModalProvider>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}